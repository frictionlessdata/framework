name: general

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:

  # Test

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: make install
      - name: Prepare environment
        run: cp .env.example .env
      - name: Prepare secrets
        if: github.event.pull_request.head.repo.full_name == github.repository
        run: echo $GOOGLE_CREDENTIALS > .google.json
        env:
          GOOGLE_CREDENTIALS: ${{secrets.GOOGLE_CREDENTIALS}}
      - name: Test software
        run: make test-ci
      - name: Report coverage
        uses: codecov/codecov-action@v1
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: test
          POSTGRES_PASSWORD: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mysql:
        image: mysql:8
        env:
            MYSQL_DATABASE: test
            MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
            - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

  # Deploy

  deploy:
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel
      - name: Build distribution
        run: |
          python setup.py sdist bdist_wheel
      - name: Publish to PYPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_KEY }}
      - name: Release to GitHub
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
